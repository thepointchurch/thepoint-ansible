---
- name: Docker Sysctl
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/docker.conf
    state: present
  loop: "{{ docker_sysctl_vars | dict2items }}"
  vars:
    docker_sysctl_vars:
      vm.overcommit_memory: '1'
- name: Disable Transparent Huge Pages (THP)
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Disable Transparent Huge Pages (THP)
      DefaultDependencies=no
      After=sysinit.target local-fs.target
      Before=docker.service

      [Service]
      Type=oneshot
      ExecStart=/bin/sh -c 'echo madvise | tee /sys/kernel/mm/transparent_hugepage/enabled > /dev/null'

      [Install]
      WantedBy=basic.target
    dest: /etc/systemd/system/disable-transparent-huge-pages.service
    owner: root
    group: root
    mode: 0644
  notify:
    - transparent_hugepage
- name: Install Docker
  ansible.builtin.apt:
    pkg:
      - docker.io
      - docker-compose
      - python3-docker
    state: present
    force: yes
- name: NGINX config directory
  ansible.builtin.file:
    state: directory
    dest: /etc/nginx
    owner: root
    group: root
    mode: 0755
- name: Create LetsEncrypt directory
  ansible.builtin.file:
    state: directory
    dest: /data/acme
    owner: root
    group: root
    mode: 0755
- name: LetsEncrypt config
  ansible.builtin.copy:
    content: |
      email = admin@thepoint.org.au
      authenticator = dns-cloudflare
      dns-cloudflare-credentials = /etc/letsencrypt/cloudflare.ini
      dns-cloudflare-propagation-seconds = 20
      server = https://acme-v02.api.letsencrypt.org/directory
    dest: /data/acme/cli.ini
    owner: root
    group: root
    mode: 0600
- name: LetsEncrypt Cloudflare config
  ansible.builtin.copy:
    content: |
      dns_cloudflare_email = {{ cloudflare_email }}
      dns_cloudflare_api_key = {{ cloudflare_token }}
    dest: "/data/acme/cloudflare.ini"
    owner: root
    group: root
    mode: 0600
- name: Create Docker secrets directory
  ansible.builtin.file:
    state: directory
    dest: /etc/secrets
    owner: root
    group: root
    mode: 0750
- name: GitHub Packages
  community.general.docker_login:
    state: present
    registry: ghcr.io
    username: "{{ github_user }}"
    password: "{{ github_token }}"
- name: Docker Prune
  ansible.builtin.cron:
    name: docker_prune
    job: /usr/bin/docker system prune -f >/dev/null
    hour: "19"
    minute: "0"
- name: Certbot Container
  community.general.docker_image:
    name: "certbot/dns-cloudflare{{ certbot_tag }}"
    source: pull
- name: LetsEncrypt Register
  ansible.builtin.command:
    cmd: "docker run -v '/data/acme:/etc/letsencrypt:rw' \
          certbot/dns-cloudflare{{ certbot_tag }} register -n --agree-tos"
    creates: "/data/acme/accounts/acme-v02.api.letsencrypt.org/directory/*/private_key.json"
- name: LetsEncrypt Deploy Hook
  ansible.builtin.copy:
    content: |
      #!/bin/sh
      /usr/bin/docker restart nginx
    dest: "/data/acme/renewal-hooks/deploy/nginx"
    owner: root
    group: root
    mode: 0755
- name: LetsEncrypt crontab
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/docker.crontab
    create: yes
    owner: root
    group: root
    mode: 0644
    line: "15 4 * * * docker run -v '/data/acme:/etc/letsencrypt:rw' \
           certbot/dns-cloudflare{{ certbot_tag }} renew --quiet --max-log-backups 7"
    regexp: ' docker run .* certbot.* renew'
  notify:
    - runner_restart
